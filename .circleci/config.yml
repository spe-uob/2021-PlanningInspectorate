## Use the latest 2.1 version of CircleCI pipeline process engine.
## See: https://circleci.com/docs/2.0/configuration-reference
#version: 2.1
#
#
#jobs:
#  build:
#    docker:
#      # specify the version you desire here
#      - image: cimg/openjdk:11.0
#
#      # Specify service dependencies here if necessary
#      # CircleCI maintains a library of pre-built images
#      # documented at https://circleci.com/docs/2.0/circleci-images/
#      - image: circleci/postgres:9.4
#        auth:
#          username: imranzaminali
#          password: dockerpass  # context / project UI env-var reference
#          environment:
#            POSTGRES_USER: postgres
#
#    working_directory: ~/2021-PlanningInspectorate
#
##    environment:
##      # Customize the JVM maximum heap limit
##      JVM_OPTS: -Xmx3200m
##      TERM: dumb
#
#    steps:
#      - checkout:
#          path: ~/2021-PlanningInspectorate
#
#
#      # run tests!
#      - run: mvn test
#
#
#workflows:
#  test_all:
#    jobs:
#      - build

version: 2.1
jobs:
  build:
    docker:
      - image: cimg/openjdk:11.0
        auth:
          username: imranzaminali
          password: dockerpass  # context / project UI env-var reference
      - image: postgres:12.0
        auth:
          username: imranzaminali
          password: dockerpass  # context / project UI env-var reference
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: abc123
    steps:
      - checkout
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run: mvn test

workflows:
  test_all:
    jobs:
      - build
